name: Build + test + release

on:
  push:
  pull_request:

permissions:
  contents: write

jobs:
  lint_test:
    name: Lint tests
    runs-on: ubuntu-latest
    steps:
      - name: Allow access to avalanchego-operator repo
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.SNOWBOT_PAT }}
        run: git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/ava-labs/avalanchego-operator".insteadOf "https://github.com/ava-labs/avalanchego-operator"
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: "v1.47.0"
          working-directory: .
          args: --timeout 3m
  unit_test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Allow access to avalanchego-operator repo
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.SNOWBOT_PAT }}
        run: git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/ava-labs/avalanchego-operator".insteadOf "https://github.com/ava-labs/avalanchego-operator"
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - run: go test -v -timeout 10m -race ./...
        env:
          CGO_CFLAGS: "-O -D__BLST_PORTABLE__" # Set the CGO flags to use the portable version of BLST
  e2e_test:
    name: e2e tests
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Run e2e tests
        shell: bash
        run: scripts/tests.e2e.sh 1.9.2 1.9.2 0.4.3
  release:
    needs: [lint_test, unit_test, e2e_test]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: avalanche-network-runner
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Set up arm64 cross compiler
        run: sudo apt-get -y install gcc-aarch64-linux-gnu
      - name: Checkout osxcross
        uses: actions/checkout@v2
        with:
          repository: tpoechtrager/osxcross
          path: osxcross
      - name: Build osxcross
        run: |
          sudo apt-get -y install clang llvm-dev libxml2-dev uuid-dev libssl-dev bash patch make tar xz-utils bzip2 gzip sed cpio libbz2-dev
          cd osxcross
          wget https://github.com/joseluisq/macosx-sdks/releases/download/12.3/$MACOS_SDK_FNAME -O tarballs/$MACOS_SDK_FNAME
          echo $MACOS_SDK_CHECKSUM tarballs/$MACOS_SDK_FNAME | sha256sum -c -
          UNATTENDED=1 ./build.sh
          echo $PWD/target/bin >> $GITHUB_PATH
        env:
          MACOS_SDK_FNAME: MacOSX12.3.sdk.tar.xz
          MACOS_SDK_CHECKSUM: 3abd261ceb483c44295a6623fdffe5d44fc4ac2c872526576ec5ab5ad0f6e26c
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
          workdir: ./avalanche-network-runner/
        env:
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
