// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	health "github.com/ava-labs/avalanchego/api/health"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// HealthClient is an autogenerated mock type for the Client type
type HealthClient struct {
	mock.Mock
}

// AwaitHealthy provides a mock function with given fields: numChecks, freq
func (_m *HealthClient) AwaitHealthy(numChecks int, freq time.Duration) (bool, error) {
	ret := _m.Called(numChecks, freq)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int, time.Duration) bool); ok {
		r0 = rf(numChecks, freq)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, time.Duration) error); ok {
		r1 = rf(numChecks, freq)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Health provides a mock function with given fields:
func (_m *HealthClient) Health() (*health.APIHealthClientReply, error) {
	ret := _m.Called()

	var r0 *health.APIHealthClientReply
	if rf, ok := ret.Get(0).(func() *health.APIHealthClientReply); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*health.APIHealthClientReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
